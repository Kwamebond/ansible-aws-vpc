---
- name: setup Vprofile Stack
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: Import VPC setup Variable
      include_vars: vars/output_vars

    - name: Import Vprofile setup variable
      include_vars: vars/vprostack_setup

    - name: Create a new EC2 key pair, returns generated private key
      amazon.aws.ec2_key:
        name: vprokey
        state: "{{state}}"
        region: "{{ region }}"
      register: vprokey

    - name: Save private key to PEM file
      ansible.builtin.copy:
        content: "{{ vprokey.key.private_key }}"
        dest: "./loginkey.pem"
        mode: '0600'
      when: vprokey.changed

    - name: Create load balancer security group
      amazon.aws.ec2_security_group:
        name: vproELB-SG
        description: Allow port 80 from everywhere and all port within sg
        region: "{{ region }}"
        vpc_id: "{{ vpc_id }}"
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
        tags:
          Name: vproELB-SG
          Project: vprofile
      register: vproELB_SG

    - name: Create Vprofile stack security group
      amazon.aws.ec2_security_group:
        name: vprostack-SG
        description: Allow port 80 from everywhere and all port within sg
        region: "{{ region }}"
        vpc_id: "{{ vpc_id }}"
        purge_rules: no
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            group_id: "{{vproELB_SG.group_id}}"

          - proto: tcp
            from_port: 22
            to_port: 22
            group_id: "{{bastion_sg_id}}"
        tags:
          Name: vprostack-SG
          Project: vprofile
      register: vprostack_SG

    - name: Update Vprofile stack security group with its own id
      amazon.aws.ec2_security_group:
        name: vprostack-SG
        description: Allow port 80 from everywhere and all port within sg
        region: "{{ region }}"
        vpc_id: "{{ vpc_id }}"
        purge_rules: no
        rules:
          - proto: all
            group_id: "{{vprostack_SG.group_id}}"


    - name: Creating Nginx web01
      amazon.aws.ec2_instance:
        name: web01
        region: "{{ region }}"
        key_name: vprokey
        instance_type: "{{ instance_type }}"
        image_id: "{{ nginx_ami }}"
        wait: true
        wait_timeout: 300
        vpc_subnet_id: "{{ priv_sub1_id }}"
        security_groups:
          - "{{ vprostack_SG.group_id }}"
        tags:
          Name: web01
          Project: vprofile
      register: web01

    - name: Creating tomcat app01
      amazon.aws.ec2_instance:
        name: app01
        region: "{{region}}"
        key_name: vprokey
        instance_type: "{{instance_type}}"
        image_id: "{{tomcat_ami}}"
        security_groups:
          - "{{ vprostack_SG.group_id }}"
        vpc_subnet_id: "{{priv_sub1_id}}"
        wait: true
        wait_timeout: 300
        tags:
          Name: app01
          Project: Vprofile
      register: app01

    - name: Creating Memcache mc01
      amazon.aws.ec2_instance:
        name: mc01
        key_name: vprokey
        security_groups:
          - "{{ vprostack_SG.group_id }}"
        image_id: "{{memcache_ami}}"
        region: "{{region}}"
        wait: yes
        wait_timeout: 300
        vpc_subnet_id: "{{priv_sub1_id}}"
        tags:
          Name: mc01
          Project: Vprofile
      register: mc01

    - name: Creating RabbitMQ rmq01
      amazon.aws.ec2_instance:
        name: rmq01
        key_name: vprokey
        security_groups:
          - "{{ vprostack_SG.group_id }}"
        image_id: "{{rmq_ami}}"
        region: "{{region}}"
        wait: yes
        wait_timeout: 300
        vpc_subnet_id: "{{priv_sub1_id}}"
        tags:
          Name: rmq01
          Project: Vprofile
      register: rmq01

    - name: Creating Mysql db01
      amazon.aws.ec2_instance:
        name: db01
        key_name: vprokey
        security_groups:
          - "{{ vprostack_SG.group_id }}"
        image_id: "{{mysql_am}}"
        region: "{{region}}"
        wait: yes
        wait_timeout: 300
        vpc_subnet_id: "{{priv_sub1_id}}"
        tags:
          Name: db01
          Project: Vprofile
      register: db01

    - name: Show mysql output
      debug:
        var: "output for mysql: {{db01}}"
